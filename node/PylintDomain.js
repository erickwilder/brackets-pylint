/*jslint vars: true, nomen: true, indent: 4*/
/*global require, console, exports, unescape */
(function () {
    "use strict";
    
    var NAMESPACE = 'pylinterDomain',
        fs = require('fs'),
        childp = require('child_process'),
        spawn = childp.spawn,
        manager;

    function runCommand(filePath, cb) {
        
        var output = '',
            args = [unescape(filePath), '--report=n'],
            pylint = spawn('pylint', args);
        console.log(args, pylint);
        
        pylint.stderr.on('data', function (data) {
            output += data;
        });
        
        pylint.stdout.on('data', function (data) {
            output += data;
        });
        
        pylint.on('exit', function (code, signal) {
            console.log(code, signal, output);
            manager.emitEvent(NAMESPACE, 'linted', [output]);
        });
    }
    
    function _init(domainManager) {
        if (domainManager.hasDomain(NAMESPACE)) {
            domainManager.registerDomain(NAMESPACE, {major: 0, minor: 1});
        }
        domainManager.registerEvent(NAMESPACE, 'linted');
        domainManager.registerCommand(
            NAMESPACE,
            'runPylint',
            runCommand,
            true,       // Asyncronous
            "Return linting result generated by a pylint process.",
            [{name: 'filePath', type: 'string', description: 'Full python source file to be linted.'}],
            [{name: 'lines', type: 'object', description: 'Emits linted event to be captured by Brackets client.'}]
        );
        manager = domainManager;
    }
    
    exports.init = _init;
}());
