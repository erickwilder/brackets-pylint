/*jslint vars: true, nomen: true, indent: 4*/
/*global require, console, exports*/
(function () {
    "use strict";
    
    function runCommand(config, callback) {
        var output = '', pylint,
            args = ['--msg-template="{line}"{column}:{category}:{msg}"',
                    '--report=n', '--persistent=n', '--rcfile=' + config.rcfilePath,
                   config.filePath];
        try {
            pylint = spawn(config.pylintPath, args);
        } catch (err) {
            callback(err);
        }
        
        pylint.stderr.on('data', function (data) {
            output += data.toString();
        });
        
        pylint.stdout.on('data', function (data) {
            output += data.toString();
        });
        
        pylint.on('exit', function (code, signal) {
            callback(null, output.split(/\n\r?/));
            output = null;
        });
    }
    
    function _init(domainManager) {
        if (domainManager.hasDomain('bracketsPylint')) {
            domainManager.registerDomain('bracketsPylint', {major: 0, minor: 1});
        }
        domainManager.registerCommand(
            'bracketsPylint',
            'run',
            runCommand,
            true,       // Asyncronous
            "Return linting result generated by a pylint process.",
            [{name: 'filePath', type: 'string', description: 'Full path of python file to be linted.'}],
            [{name: 'lines', type: 'object', description: 'Promise with linting results.'}]
        );
    }
    
    exports.init = _init;
}());
